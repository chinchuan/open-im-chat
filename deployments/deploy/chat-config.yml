apiVersion: v1
kind: ConfigMap
metadata:
  namespace: chat
  name: openim-chat-config
data:
  discovery.yml: |
    enable: kubernetes
    kubernetes:
      namespace: chat
    etcd:
      rootDirectory: openim
      address: [ localhost:12379 ]
      username: ''
      password: ''

    rpcService:
      chat: chat-rpc-service
      admin: admin-rpc-service

  log.yml: |
    # Log storage path, default is acceptable, change to a full path if modification is needed
    # storageLocation: ../../../../logs/
    storageLocation: ./logs/
    # Log rotation period (in hours), default is acceptable
    rotationTime: 24
    # Number of log files to retain, default is acceptable
    remainRotationCount: 2
    # Log level settings: 3 for production environment; 6 for more verbose logging in debugging environments
    remainLogLevel: 6
    # Whether to output to standard output, default is acceptable
    isStdout: true
    # Whether to log in JSON format, default is acceptable
    isJson: false
    # output simplify log when KeyAndValues's value len is bigger than 50 in rpc method log
    isSimplify: true

  mongodb.yml: |
    # URI for database connection, leave empty if using address and credential settings directly
    uri: 'mongodb://chat:rollgame_chat@202.79.169.45:27017/chat?authSource=chat&directConnection=true '
    # List of MongoDB server addresses
    address: [ ]
    # Name of the database
    database: 
    # Username for database authentication
    username: 
    # Password for database authentication
    password: # 
    # Authentication source for database authentication, if use root user, set it to admin
    authSource: 
    # Maximum number of connections in the connection pool
    maxPoolSize: 100
    # Maximum number of retry attempts for a failed database connection
    maxRetry: 10

  redis.yml: |
    # List of Redis server addresses
    address: [ 202.79.169.45:6333 ]
    # Username for Redis authentication (leave blank if not used)
    username: ''
    # Password for Redis authentication
    password: "8sshfwcxd!@1-#sc_ds"  # openIM123
    # Enable or disable pipeline processing
    enablePipeline: false
    # Enable or disable cluster mode
    clusterMode: false
    # Database index to be used
    db: 0
    # Maximum number of retry attempts for a failed connection
    maxRetry: 10

  share.yml: |
    openIM:
      # OpenIM API address
      apiURL: http://openim-api-service:10002
      # OpenIM secret key, must be consistent with OpenIM
      secret: wd-chat
      # OpenIM administrator userID, must be consistent with OpenIM
      adminUserID: imAdmin
      IMAdminUser: 
        UserIDs: ["imAdmin"]
        Nicknames: ["imAdmin"]

    chatAdmin:
       # Default username and password for the admin
      - "imAdmin"

  chat-api-admin.yml: |
    api:
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, default is recommended
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched
      ports: [ 10009 ]

  chat-rpc-admin.yml: |
    rpc:
      # The IP address where this RPC service registers itself; if left blank, it defaults to the internal network IP
      registerIP: ''
      # IP address that the RPC service listens on; setting to 0.0.0.0 listens on both internal and external IPs. If left blank, it automatically uses the internal network IP
      listenIP: 0.0.0.0
      # List of ports that the RPC service listens on; configuring multiple ports will launch multiple instances.
      ports: [ 30200 ]

    tokenPolicy:
      expire: 90

    secret: chat123
  chat-api-chat.yml: |
    api:
      # Listening IP; 0.0.0.0 means both internal and external IPs are listened to, default is recommended
      listenIP: 0.0.0.0
      # Listening ports; if multiple are configured, multiple instances will be launched
      ports: [ 10008 ]

  chat-rpc-chat.yml: |
    rpc:
      # The IP address where this RPC service registers itself; if left blank, it defaults to the internal network IP
      registerIP: ''
      # IP address that the RPC service listens on; setting to 0.0.0.0 listens on both internal and external IPs. If left blank, it automatically uses the internal network IP
      listenIP: 0.0.0.0
      # List of ports that the RPC service listens on; configuring multiple ports will launch multiple instances.
      ports: [ 30300 ]

    verifyCode:
      validTime: 300
      validCount: 5
      uintTime: 86400
      maxCount: 10
      superCode: "666666"
      len: 6
      phone:
        use: ""
        ali:
          endpoint: ""
          accessKeyId: ""
          accessKeySecret: ""
          signName: ""
          verificationCodeTemplateCode: ""
      mail:
        enable: false
        title: ""
        senderMail: ""
        senderAuthorizationCode: ""
        smtpAddr: ""
        smtpPort:

    liveKit:
      url: "ws://127.0.0.1:7880" # LIVEKIT_URL, LiveKit server address and port
      key: "APIGPW3gnFTzqHH"
      secret: "23ztfSqsfQ8hKkHzHTl3Z4bvaxro0snjk5jwbp5p6Q3"

    allowRegister: true
